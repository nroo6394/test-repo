name: Automated Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

env:
  RELEASE_BRANCH: master

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Configure semantic-release
        run: |
          cat > .releaserc.json << EOF
          {
            "branches": [
              "${{ env.RELEASE_BRANCH }}"
            ],
            "plugins": [
              [
                "@semantic-release/commit-analyzer",
                {
                  "preset": "conventionalcommits",
                  "releaseRules": [
                    { "type": "feat", "release": "minor" },
                    { "type": "fix", "release": "patch" },
                    { "type": "perf", "release": "patch" },
                    { "type": "revert", "release": "patch" },
                    { "type": "docs", "release": "patch" },
                    { "type": "refactor", "release": false },
                    { "type": "test", "release": false },
                    { "type": "build", "release": false },
                    { "type": "ci", "release": false },
                    { "type": "chore", "release": false },
                    { "type": "style", "release": false },
                    { "breaking": true, "release": "major" }
                  ]
                }
              ],
              [
                "@semantic-release/release-notes-generator",
                {
                  "preset": "conventionalcommits",
                  "presetConfig": {
                    "types": [
                      { "type": "feat", "section": "Features" },
                      { "type": "fix", "section": "Bug Fixes" },
                      { "type": "perf", "section": "Performance Improvements" },
                      { "type": "revert", "section": "Reverts" },
                      { "type": "docs", "section": "Documentation" },
                      { "type": "refactor", "section": "Code Refactoring", "hidden": true },
                      { "type": "test", "section": "Tests", "hidden": true },
                      { "type": "build", "section": "Build System", "hidden": true },
                      { "type": "ci", "section": "CI/CD", "hidden": true },
                      { "type": "chore", "section": "Chores", "hidden": true },
                      { "type": "style", "section": "Styles", "hidden": true }
                    ]
                  }
                }
              ],
              [
                "@semantic-release/github",
                {
                  "successComment": false,
                  "failComment": false,
                  "releasedLabels": false
                }
              ]
            ]
          }
          EOF

      - name: Install semantic-release dependencies
        run: |
          npm install --no-save \
            semantic-release@^24.0.0 \
            @semantic-release/github@^11.0.0 \
            @semantic-release/commit-analyzer@^13.0.0 \
            @semantic-release/release-notes-generator@^14.0.0 \
            conventional-changelog-conventionalcommits@^8.0.0

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Running semantic-release..."
          echo ""
          
          npx semantic-release 2>&1 | tee semantic-release.log
          EXIT_CODE=$?
          
          echo ""
          if [ $EXIT_CODE -eq 0 ]; then
            # Check if a release was actually created
            if grep -q "There are no relevant changes, so no new version is released" semantic-release.log; then
              echo "Workflow completed successfully - No release created"
              echo "This is normal for non-releasing commits (refactor, test, build, ci, chore, style)"
            else
              echo "Workflow completed successfully - Release created"
            fi
          elif [ $EXIT_CODE -eq 1 ]; then
            echo "Workflow completed successfully - No release created"
            echo "This is normal for non-releasing commits (refactor, test, build, ci, chore, style)"
            exit 0
          else
            echo "Semantic-release failed with exit code $EXIT_CODE"
            echo "This indicates a configuration or infrastructure problem"
            exit $EXIT_CODE
          fi